{"version":3,"sources":["components/Navbar.js","components/Body.js","components/Tile.js","components/Game.js","App.js","index.js"],"names":["Nav","props","react_default","a","createElement","className","score","Container","children","Tile","onClick","handleClick","id","style","backgroundImage","concat","image","Game","state","data","handleCorrectGuess","newData","_this$state","_this","newScore","topScore","setState","shuffleData","handleIncorrectGuess","resetData","map","item","Object","objectSpread","clicked","i","length","j","Math","floor","random","temp","handleItemClick","guessedCorrectly","newItem","this","_this2","Navbar","Body","components_Tile","key","Component","App","components_Game","ReactDOM","render","src_App","document","getElementById"],"mappings":"mNAYeA,MAVf,SAAaC,GACX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,qBAEMH,EAAAC,EAAAC,cAAA,WAFN,UAGcH,EAAMK,aCATC,MAJf,SAAmBN,GACjB,OAAOC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaJ,EAAMO,WCS7BC,MAVf,SAAcR,GACZ,OACEC,EAAAC,EAAAC,cAAA,OACEM,QAAS,kBAAMT,EAAMU,YAAYV,EAAMW,KACvCC,MAAO,CAAEC,gBAAe,QAAAC,OAAUd,EAAMe,MAAhB,OACxBX,UAAS,iBCgFAY,6MA/EbC,MAAQ,CACNC,OACAb,MAAO,KAOTc,mBAAqB,SAAAC,GAAW,IAAAC,EACFC,EAAKL,MAC3BM,GAFwBF,EACtBG,SADsBH,EACZhB,MACO,GAEzBiB,EAAKG,SAAS,CACZP,KAAMI,EAAKI,YAAYN,GACvBf,MAAOkB,OAIXI,qBAAuB,SAAAT,GACrBI,EAAKG,SAAS,CACZP,KAAMI,EAAKM,UAAUV,GACrBb,MAAO,OAIXuB,UAAY,SAAAV,GACV,IAAMU,EAAYV,EAAKW,IAAI,SAAAC,GAAI,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GAAUD,EAAV,CAAgBG,SAAS,MACxD,OAAOX,EAAKI,YAAYE,MAG1BF,YAAc,SAAAR,GAEZ,IADA,IAAIgB,EAAIhB,EAAKiB,OAAS,EACfD,EAAI,GAAG,CACZ,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOtB,EAAKgB,GAClBhB,EAAKgB,GAAKhB,EAAKkB,GACflB,EAAKkB,GAAKI,EACVN,IAEF,OAAOhB,KAGTuB,gBAAkB,SAAA9B,GAChB,IAAI+B,GAAmB,EACjBtB,EAAUE,EAAKL,MAAMC,KAAKW,IAAI,SAAAC,GAClC,IAAMa,EAAOZ,OAAAC,EAAA,EAAAD,CAAA,GAAQD,GAOrB,OANIa,EAAQhC,KAAOA,IACZgC,EAAQV,UACXU,EAAQV,SAAU,EAClBS,GAAmB,IAGhBC,IAETD,EACIpB,EAAKH,mBAAmBC,GACxBE,EAAKK,qBAAqBP,uFAnD9BwB,KAAKnB,SAAS,CAAEP,KAAM0B,KAAKlB,YAAYkB,KAAK3B,MAAMC,yCAsD3C,IAAA2B,EAAAD,KACP,OACE3C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2C,EAAD,CAAKzC,MAAOuC,KAAK3B,MAAMZ,QACvBJ,EAAAC,EAAAC,cAAC4C,EAAD,KACGH,KAAK3B,MAAMC,KAAKW,IAAI,SAAAC,GAAI,OACvB7B,EAAAC,EAAAC,cAAC6C,EAAD,CACEC,IAAKnB,EAAKnB,GACVA,GAAImB,EAAKnB,GACTD,YAAamC,EAAKJ,gBAClB1B,MAAOe,EAAKf,mBAvEPmC,aCDJC,MAJf,WACE,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,OCATC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.052c47f4.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Nav(props) {\n  return (\n    <nav className=\"navbar\">\n          South Park Clicker\n          <br></br>\n          Score: {props.score}\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Container(props) {\n  return <main className=\"container\">{props.children}</main>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Tile(props) {\n  return (\n    <div\n      onClick={() => props.handleClick(props.id)}\n      style={{ backgroundImage: `url(\"${props.image}\")` }}\n      className={`tile`}\n    />\n  );\n}\n\nexport default Tile\n","import React, { Component } from \"react\";\nimport Nav from \"./Navbar\";\nimport Container from \"./Body.js\";\nimport Tile from \"./Tile.js\";\nimport data from \"../data.json\";\n\n\n// --- **CODE BELOW IS FROM CLASS SOLUTIONS REPOSITORY I AM TRYING TO FIGURE OUT STILL - Working backwards**--\nclass Game extends Component {\n  state = {\n    data,\n    score: 0,\n  };\n\n  componentDidMount() {\n    this.setState({ data: this.shuffleData(this.state.data) });\n  }\n\n  handleCorrectGuess = newData => {\n    const { topScore, score } = this.state;\n    const newScore = score + 1;\n\n    this.setState({\n      data: this.shuffleData(newData),\n      score: newScore\n    });\n  };\n\n  handleIncorrectGuess = data => {\n    this.setState({\n      data: this.resetData(data),\n      score: 0\n    });\n  };\n\n  resetData = data => {\n    const resetData = data.map(item => ({ ...item, clicked: false }));\n    return this.shuffleData(resetData);\n  };\n\n  shuffleData = data => {\n    let i = data.length - 1;\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = data[i];\n      data[i] = data[j];\n      data[j] = temp;\n      i--;\n    }\n    return data;\n  };\n\n  handleItemClick = id => {\n    let guessedCorrectly = false;\n    const newData = this.state.data.map(item => {\n      const newItem = { ...item };\n      if (newItem.id === id) {\n        if (!newItem.clicked) {\n          newItem.clicked = true;\n          guessedCorrectly = true;\n        }\n      }\n      return newItem;\n    });\n    guessedCorrectly\n      ? this.handleCorrectGuess(newData)\n      : this.handleIncorrectGuess(newData);\n  };\n\n  render() {\n    return (\n      <div>\n        <Nav score={this.state.score} />\n        <Container>\n          {this.state.data.map(item => (\n            <Tile\n              key={item.id}\n              id={item.id}\n              handleClick={this.handleItemClick}\n              image={item.image}\n            />\n          ))}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport Game from \"./components/Game.js\";\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}